--- drivers/misc/mediatek/mtprof/rt_monitor.c
+++ drivers/misc/mediatek/mtprof/rt_monitor.c
@@ -87,7 +87,7 @@ static void store_rt_mon_info(int cpu, u64 delta_exec, struct task_struct *p)
 	struct mt_rt_mon_struct *mtmon;
 	unsigned long irq_flags;
 
-	mtmon = kmalloc(sizeof(struct mt_rt_mon_struct), GFP_ATOMIC);
+	mtmon = kmalloc(sizeof(struct mt_rt_mon_struct), GFP_ATOMIC | __GFP_NO_KSWAPD);
 	if (!mtmon)
 		return;
 	memset(mtmon, 0, sizeof(struct mt_rt_mon_struct));
@@ -229,9 +229,9 @@ void mt_rt_mon_print_task(int cpu)
 	rt_end_ts_buffer =  __raw_get_cpu_var(rt_end_ts);
 	rt_dur_ts_buffer = __raw_get_cpu_var(rt_dur_ts);
 
-	pr_err(
-		"sched: mon_count = %d monitor start[%lld.%06lu ms] end[%lld.%06lu ms] dur[%lld.%06lu ms]\n",
-		per_cpu(rt_mon_count, cpu),
+	printk_deferred("[name:rt_monitor&]");
+	printk_deferred("sched: mon_count = %d", per_cpu(rt_mon_count, cpu));
+	printk_deferred(" monitor start[%lld.%06lu ms] end[%lld.%06lu ms] dur[%lld.%06lu ms]\n",
 		SPLIT_NS_H(per_cpu(rt_start_ts, cpu)), SPLIT_NS_L(per_cpu(rt_start_ts, cpu)),
 		SPLIT_NS_H(per_cpu(rt_end_ts, cpu)), SPLIT_NS_L(per_cpu(rt_end_ts, cpu)),
 		SPLIT_NS_H(per_cpu(rt_dur_ts, cpu)), SPLIT_NS_L(per_cpu(rt_dur_ts, cpu)));
@@ -243,9 +243,11 @@ void mt_rt_mon_print_task(int cpu)
 	list_for_each_entry(tmp, list_head, list) {
 		memcpy(&buffer[count], tmp, sizeof(struct mt_rt_mon_struct));
 		count++;
-		pr_err("sched:[%s] pid:%d prio:%d exec_time[%lld.%06lu ms] percen[%d.%04d%%] isr_time[%lld.%06lu ms]\n",
-			tmp->comm, tmp->pid, tmp->prio,
-			SPLIT_NS_H(tmp->cost_cputime), SPLIT_NS_L(tmp->cost_cputime),
+		printk_deferred("[name:rt_monitor&]");
+		printk_deferred(" sched:[%s] pid:%d prio:%d exec_time[%lld.%06lu ms]",
+				tmp->comm, tmp->pid, tmp->prio,
+				SPLIT_NS_H(tmp->cost_cputime), SPLIT_NS_L(tmp->cost_cputime));
+		printk_deferred(" percen[%d.%04d%%] isr_time[%lld.%06lu ms]\n",
 			tmp->cputime_percen_6 / 10000, tmp->cputime_percen_6 % 10000,
 			SPLIT_NS_H(tmp->isr_time), SPLIT_NS_L(tmp->isr_time));
 
