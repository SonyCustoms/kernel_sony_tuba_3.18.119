--- drivers/misc/mediatek/ccci_util/ccci_util_lib_sys.c
+++ drivers/misc/mediatek/ccci_util/ccci_util_lib_sys.c
@@ -157,6 +157,15 @@ static ssize_t ccci_md_enable_show(char *buf)
 
 CCCI_ATTR(md_en, 0660, &ccci_md_enable_show, NULL);
 
+/* Sys -- post fix */
+static ssize_t ccci_md1_post_fix_show(char *buf)
+{
+	get_md_postfix(MD_SYS1, NULL, buf, NULL);
+	return strlen(buf);
+}
+
+CCCI_ATTR(md1_postfix, 0444, &ccci_md1_post_fix_show, NULL);
+
 /* Sys -- dump buff usage */
 static ssize_t ccci_dump_buff_usage_show(char *buf)
 {
@@ -212,7 +221,10 @@ CCCI_ATTR(lk_md, 0444, &ccci_lk_load_md_show, NULL);
 
 /* Sys -- get ccci private feature info */
 /* If platform has special feature setting, platform code will implemet this function */
-int __attribute__((weak)) ccci_get_plat_ft_inf(char buf[], int size);
+int __attribute__((weak)) ccci_get_plat_ft_inf(char buf[], int size)
+{
+	return (ssize_t)snprintf(buf, size, "ft_inf_ver:1");
+}
 static ssize_t ccci_ft_inf_show(char *buf)
 {
 	if (ccci_get_plat_ft_inf) {
@@ -220,335 +232,11 @@ static ssize_t ccci_ft_inf_show(char *buf)
 		return (ssize_t)ccci_get_plat_ft_inf(buf, 4095);
 	}
 	/* Enter here means using default setting */
-	return (ssize_t)snprintf(buf, 4095, "ft_inf_ver:1");
+	return (ssize_t)ccci_get_plat_ft_inf(buf, 4095);
 }
 
 CCCI_ATTR(ft_info, 0444, &ccci_ft_inf_show, NULL);
 
-/* Sys -- Runtime register debug */
-static char aat_cmd[32];
-static unsigned long aat_para[8];
-static void __iomem *aat_runtime_map_base_vir;
-static phys_addr_t aat_runtime_map_base_phy;
-static unsigned int aat_err_no;
-static char aat_err_str[64];
-static int aat_show_case;
-static unsigned long ast_dump_start_addr;
-static unsigned long ast_dump_size;
-static unsigned long ast_dump_width;
-static unsigned char read8(unsigned char *addr)
-{
-	return ioread8((void __iomem *)addr);
-}
-
-static unsigned short read16(unsigned short *addr)
-{
-	return ioread16((void __iomem *)addr);
-}
-
-static unsigned int read32(unsigned int *addr)
-{
-	return ioread32((void __iomem *)addr);
-}
-
-static void aat_write(unsigned long base, unsigned long val, unsigned long width)
-{
-	switch (width) {
-	case 4L:
-		mt_reg_sync_writel(val, base);
-		break;
-	case 2L:
-		mt_reg_sync_writew(val, base);
-		break;
-	default:
-		mt_reg_sync_writeb(val, base);
-		break;
-	}
-}
-
-static int dump_line_with_8(unsigned long addr, char buf[], int num, int size)
-{
-	int i, ch_in_line = 0;
-	unsigned char tmp;
-	unsigned long tag_addr =
-	    addr - ((unsigned long)aat_runtime_map_base_vir) + ((unsigned long)aat_runtime_map_base_phy);
-
-	ch_in_line += snprintf(&buf[ch_in_line], size - ch_in_line, "[0x%016lX] ", tag_addr);
-	for (i = 0; i < num; i++) {
-		tmp = read8((unsigned char *)(addr + i));
-		ch_in_line += snprintf(&buf[ch_in_line], size - ch_in_line, "%02x ", tmp);
-	}
-	ch_in_line += snprintf(&buf[ch_in_line], size - ch_in_line, "\n");
-	return ch_in_line;
-}
-
-static int dump_line_with_16(unsigned long addr, char buf[], int num, int size)
-{
-	int i, ch_in_line = 0;
-	unsigned short tmp;
-	unsigned long tag_addr =
-	    addr - ((unsigned long)aat_runtime_map_base_vir) + ((unsigned long)aat_runtime_map_base_phy);
-
-	ch_in_line += snprintf(&buf[ch_in_line], size - ch_in_line, "[0x%016lX] ", tag_addr);
-	for (i = 0; i < num; i += 2) {
-		tmp = read16((unsigned short *)(addr + i));
-		ch_in_line += snprintf(&buf[ch_in_line], size - ch_in_line, "%04x ", tmp);
-	}
-	ch_in_line += snprintf(&buf[ch_in_line], size - ch_in_line, "\n");
-	return ch_in_line;
-}
-
-static int dump_line_with_32(unsigned long addr, char buf[], int num, int size)
-{
-	int i, ch_in_line = 0;
-	unsigned int tmp;
-	unsigned long tag_addr =
-	    addr - ((unsigned long)aat_runtime_map_base_vir) + ((unsigned long)aat_runtime_map_base_phy);
-
-	ch_in_line += snprintf(&buf[ch_in_line], size - ch_in_line, "[0x%016lX] ", tag_addr);
-
-	for (i = 0; i < num; i += 4) {
-		tmp = read32((unsigned int *)(addr + i));
-		ch_in_line += snprintf(&buf[ch_in_line], size - ch_in_line, "%08x ", tmp);
-	}
-	ch_in_line += snprintf(&buf[ch_in_line], size - ch_in_line, "\n");
-	return ch_in_line;
-}
-
-static int runtime_reg_dump(unsigned long start_addr, unsigned int size, unsigned int access_width, char out_buf[])
-{
-	unsigned int i, buf_idx, dump_num_in_line, has_dumped;
-	int (*rd_func)(unsigned long, char *, int, int);
-	unsigned long curr_addr;
-
-	if (size > 4096)
-		size = 4096;
-
-	switch (access_width) {
-	case 4:
-		rd_func = dump_line_with_32;
-		size = ((size + 3) & (~0x3));
-		break;
-	case 2:
-		rd_func = dump_line_with_16;
-		size = ((size + 1) & (~0x1));
-		break;
-	default:		/* means 1 */
-		rd_func = dump_line_with_8;
-		break;
-	}
-
-	curr_addr = start_addr;
-	buf_idx = 0;
-	dump_num_in_line = 0;
-	has_dumped = 0;
-
-	for (i = 0; i < size; i += 16) {
-		dump_num_in_line = size - has_dumped;
-		if (dump_num_in_line > 16)
-			dump_num_in_line = 16;
-		buf_idx += rd_func(curr_addr, &out_buf[buf_idx], dump_num_in_line, 4096 - buf_idx);
-		curr_addr += dump_num_in_line;
-		has_dumped += dump_num_in_line;
-	}
-
-	return buf_idx;
-}
-
-static int command_parser(const char *input_str, char cmd[], unsigned long out_put[])
-{
-	int i = 0, j, k;
-	char tmp_buf[32];
-	char filter_str[256];
-	int temp_valu;
-
-	/* Filter out 0xD and 0xA */
-	j = 0;
-	i = 0;
-	while ((i < 256) && (input_str[i] != '\0')) {
-		if ((input_str[i] == 0xD) || (input_str[i] == 0xA)) {
-			i++;
-			continue;
-		}
-		filter_str[j] = input_str[i];
-		i++;
-		j++;
-	}
-	filter_str[j] = '\0';
-
-	i = 0;
-	/* Parse command */
-	if (filter_str[i] == '\0')
-		return 0;
-	j = 0;
-	while (filter_str[i] != '\0') {
-		if (filter_str[i] != '_') {
-			cmd[j] = filter_str[i];
-			j++;
-			i++;
-		} else {
-			i++;
-			break;
-		}
-	}
-	cmd[j] = '\0';
-
-	/* Parse parameters */
-	for (k = 0; k < 4; k++) {
-		if (filter_str[i] == '\0')
-			return k + 1;
-		j = 0;
-		while (filter_str[i] != '\0') {
-			if (filter_str[i] != '_') {
-				tmp_buf[j] = filter_str[i];
-				j++;
-				i++;
-			} else {
-				i++;
-				break;
-			}
-		}
-		tmp_buf[j] = '\0';
-		/* change string to number */
-		temp_valu = kstrtoul(tmp_buf, 16, &out_put[k]);
-		if (temp_valu < 0)
-			CCCI_UTIL_ERR_MSG("sscanf return fail: %d\n", temp_valu);
-	}
-
-	return k + 1;
-}
-
-static void cmd_process(char cmd[], unsigned long para[], int para_num)
-{
-	if ((para_num == 2) && (strcmp(cmd, "IOR") == 0)) {
-		CCCI_UTIL_DBG_MSG("Command:%s, Base addr:0x%p\n", cmd, (void *)para[0]);
-		/* Do IO-REMAP here */
-		if (aat_runtime_map_base_vir == NULL) {
-			aat_runtime_map_base_vir = ioremap_nocache((phys_addr_t) para[0], 4096);
-			if (aat_runtime_map_base_vir == NULL) {
-				snprintf(aat_err_str, 64, "Map phy addr:0x%p fail\n", (void *)para[0]);
-				aat_err_no = 0x00002100;
-			} else {
-				snprintf(aat_err_str, 64, "Map phy addr:0x%p OK\n", (void *)para[0]);
-				aat_err_no = 0x00001000;
-				aat_runtime_map_base_phy = (phys_addr_t) para[0];
-			}
-		} else {
-			snprintf(aat_err_str, 64, "Please Un-map phy addr:0x%pa\n", &aat_runtime_map_base_phy);
-			aat_err_no = 0x00002100;
-		}
-		aat_show_case = 0;	/*Error info */
-	} else if ((para_num == 4) && (strcmp(cmd, "WR") == 0)) {
-		CCCI_UTIL_DBG_MSG("Command:%s, Offset:0x%p, value:0x%p, type:0x%p\n", cmd, (void *)para[0],
-				  (void *)para[1], (void *)para[2]);
-		/* Do write operation here */
-		if (aat_runtime_map_base_vir != NULL) {
-			if (para[0] >= 4096L) {
-				snprintf(aat_err_str, 64, "Offset should less than 4096\n");
-				aat_err_no = 0x00002100;
-			} else {
-				aat_write(((unsigned long)aat_runtime_map_base_vir) + para[0], para[1], para[2]);
-				snprintf(aat_err_str, 64, "Write phy addr:0x%p OK\n",
-					 (void *)((unsigned long)aat_runtime_map_base_phy + para[0]));
-				aat_err_no = 0x00001000;
-			}
-		} else {
-			snprintf(aat_err_str, 64, "Please do io map first\n");
-			aat_err_no = 0x00002100;
-		}
-		aat_show_case = 0;	/*Error info */
-	} else if ((para_num == 4) && (strcmp(cmd, "QUERY") == 0)) {
-		CCCI_UTIL_DBG_MSG("Command:%s, Offset:0x%p, value:0x%p, type:0x%p\n", cmd, (void *)para[0],
-				  (void *)para[1], (void *)para[2]);
-		/* Do read operation here */
-		if (aat_runtime_map_base_vir != NULL) {
-			if (para[0] >= 4096L) {
-				snprintf(aat_err_str, 64, "Offset should less than 4096\n");
-				aat_err_no = 0x00002100;
-				aat_show_case = 0;	/*Error info */
-			} else if ((para[0] + para[1]) > 4096L) {
-				snprintf(aat_err_str, 64, "Offset + Size should less than 4096\n");
-				aat_err_no = 0x00002100;
-				aat_show_case = 0;	/*Error info */
-			} else {
-				snprintf(aat_err_str, 64, "Query offset:0x%p size:0x%p OK\n", (void *)para[0],
-					 (void *)para[1]);
-				ast_dump_start_addr = (unsigned long)aat_runtime_map_base_vir + para[0];
-				ast_dump_size = para[1];
-				ast_dump_width = para[2];
-				aat_err_no = 0x00001000;
-				aat_show_case = 1;	/*Dump data */
-			}
-		} else {
-			snprintf(aat_err_str, 64, "Please do io map first\n");
-			aat_err_no = 0x00002100;
-			aat_show_case = 0;	/*Error info */
-		}
-	} else if ((para_num == 1) && (strcmp(cmd, "IOU") == 0)) {
-		CCCI_UTIL_DBG_MSG("Command:%s\n", cmd);
-		/* Do IO-UNMAP here */
-		if (aat_runtime_map_base_vir != NULL) {
-			iounmap(aat_runtime_map_base_vir);
-			aat_runtime_map_base_vir = NULL;
-			snprintf(aat_err_str, 64, "IO Un-map phy addr:0x%pa OK\n", &aat_runtime_map_base_phy);
-			aat_err_no = 0x00001000;
-		} else {
-			snprintf(aat_err_str, 64, "No need Un-map\n");
-			aat_err_no = 0x00001000;
-		}
-		aat_show_case = 0;	/*Error info */
-	} else if ((para_num == 1) && (strcmp(cmd, "MDFU") == 0)) {	/*MD Force Unlock */
-		CCCI_UTIL_DBG_MSG("Command:%s\n", cmd);
-		/* Do Un-lock operation here, unlock sleep/clock here */
-		snprintf(aat_err_str, 64, "Force MD un-lock\n");
-#ifndef FEATURE_FPGA_PORTING
-		spm_ap_mdsrc_req(0);
-#endif
-		aat_err_no = 0x00001000;
-		aat_show_case = 0;	/*Error info */
-	} else if ((para_num == 1) && (strcmp(cmd, "MDFL") == 0)) {	/*MD Force Lock */
-		CCCI_UTIL_DBG_MSG("Command:%s\n", cmd);
-		/* Do lock operation here, unlock sleep/clock here */
-		snprintf(aat_err_str, 64, "Force MD lock\n");
-#ifndef FEATURE_FPGA_PORTING
-		spm_ap_mdsrc_req(1);
-#endif
-		aat_err_no = 0x00001000;
-		aat_show_case = 0;	/*Error info */
-	} else {
-		CCCI_UTIL_ERR_MSG("In-valid command:%s and parameter number:%d\n", cmd, para_num);
-		snprintf(aat_err_str, 64, "In-valid command:%s and parameter number:%d\n", cmd, para_num);
-		aat_show_case = 0;	/*Error info */
-	}
-}
-
-static ssize_t aat_show(char *buf)
-{
-	unsigned int curr = 0;
-	unsigned int dump_size;
-
-	curr = snprintf(buf, 4096, "0x%08x: %s\n", (unsigned int)aat_err_no, aat_err_str);
-
-	if (aat_show_case == 1) {
-		dump_size = 4096 - curr;
-		if (dump_size > ((unsigned int)ast_dump_size))
-			dump_size = (unsigned int)ast_dump_size;
-		curr += runtime_reg_dump(ast_dump_start_addr, dump_size, (unsigned int)ast_dump_width, &buf[curr]);
-	}
-
-	return (ssize_t) curr;
-}
-
-static ssize_t aat_store(const char *buf, size_t count)
-{
-	int para_num = command_parser(buf, aat_cmd, aat_para);
-
-	cmd_process(aat_cmd, aat_para, para_num);
-	return count;
-}
-
-CCCI_ATTR(aat, 0600, &aat_show, &aat_store);
-
 static ssize_t kcfg_setting_show(char *buf)
 {
 	unsigned int curr = 0;
@@ -573,24 +261,17 @@ static ssize_t kcfg_setting_show(char *buf)
 		"[modem en]:%c-%c-%c-%c-%c\n", md_en[0], md_en[1], md_en[2], md_en[3], md_en[4]);
 	curr += actual_write;
 
-	/* Feature option part */
-#ifdef CONFIG_EVDO_DT_SUPPORT
-	actual_write = snprintf(&buf[curr], 4096 - curr, "[EVDO_DT_SUPPORT]:1\n");
-#else
-	actual_write = snprintf(&buf[curr], 4096 - curr, "[EVDO_DT_SUPPORT]:0\n");
-#endif
-	curr += actual_write;
-#ifdef CONFIG_MTK_LTE_DC_SUPPORT
-	actual_write = snprintf(&buf[curr], 4096 - curr, "[MTK_LTE_DC_SUPPORT]:1\n");
-#else
-	actual_write = snprintf(&buf[curr], 4096 - curr, "[MTK_LTE_DC_SUPPORT]:0\n");
-#endif
-	curr += actual_write;
 	if (ccci_get_opt_val("opt_eccci_c2k") > 0) {
 		actual_write = snprintf(&buf[curr], 4096 - curr, "[MTK_ECCCI_C2K]:1\n");
 		curr += actual_write;
 	}
 
+	if (ccci_port_ver == 6) /* ECCCI_FSM */
+		actual_write = snprintf(&buf[curr], 4096 - curr, "[ccci_drv_ver]:V2\n"); /* FSM using v2 */
+	else
+		actual_write = snprintf(&buf[curr], 4096 - curr, "[ccci_drv_ver]:V1\n");
+	curr += actual_write;
+
 	/* Add total size to tail */
 	actual_write = snprintf(&buf[curr], 4096 - curr, "total:%d\n", curr);
 	curr += actual_write;
@@ -612,12 +293,12 @@ static struct attribute *ccci_default_attrs[] = {
 	&ccci_attr_version.attr,
 	&ccci_attr_md_en.attr,
 	&ccci_attr_debug.attr,
-	&ccci_attr_aat.attr,
 	&ccci_attr_kcfg_setting.attr,
 	&ccci_attr_dump_max.attr,
 	&ccci_attr_lk_md.attr,
 	&ccci_attr_md_chn.attr,
 	&ccci_attr_ft_info.attr,
+	&ccci_attr_md1_postfix.attr,
 	NULL
 };
 
