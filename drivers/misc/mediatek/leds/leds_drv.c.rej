--- drivers/misc/mediatek/leds/leds_drv.c
+++ drivers/misc/mediatek/leds/leds_drv.c
@@ -40,8 +40,9 @@
 #include <leds_hal.h>
 #include "leds_drv.h"
 #include <mt-plat/mt_pwm.h>
-
-#include <pmic.h>
+#ifdef CONFIG_MTK_AAL_SUPPORT
+#include <ddp_aal.h>
+#endif
 
 #ifdef CONFIG_BACKLIGHT_SUPPORT_LP8557
 #include <linux/of_gpio.h>
@@ -198,16 +206,6 @@ static int brightness_set_pmic(enum mt65xx_led_pmic pmic_type, u32 level,
 
 }
 
-#if defined(CONFIG_MTK_PMIC_CHIP_MT6353)
-static int brightness_set_pmic_nolock(enum mt65xx_led_pmic pmic_type, u32 level,
-			       u32 div)
-{
-	mt_brightness_set_pmic_nolock(pmic_type, level, div);
-	return -1;
-
-}
-#endif
-
 static int mt65xx_led_set_cust(struct cust_mt65xx_led *cust, int level)
 {
 #ifdef CONTROL_BL_TEMPERATURE
@@ -787,9 +789,6 @@ static int mt65xx_leds_suspend(struct platform_device *pdev, pm_message_t state)
 
 static void mt65xx_leds_shutdown(struct platform_device *pdev)
 {
-#if defined(CONFIG_MTK_PMIC_CHIP_MT6353)
-	int ret = 0;
-#endif
 	int i;
 	struct nled_setting led_tmp_setting = { NLED_OFF, 0, 0 };
 
@@ -818,22 +817,24 @@ static void mt65xx_leds_shutdown(struct platform_device *pdev)
 			/* break; */
 
 		case MT65XX_LED_MODE_PMIC:
-#if defined(CONFIG_MTK_PMIC_CHIP_MT6353)
-			ret = pmic_chk_intf();
-			if (ret)
-				brightness_set_pmic_nolock(g_leds_data[i]->cust.data, 0, 0);
-			else
-#endif
-				brightness_set_pmic(g_leds_data[i]->cust.data, 0, 0);
+			brightness_set_pmic(g_leds_data[i]->cust.data, 0, 0);
 			break;
 		case MT65XX_LED_MODE_CUST_LCM:
 			LEDS_DRV_DEBUG("backlight control through LCM!!1\n");
+#ifdef CONFIG_MTK_AAL_SUPPORT
+			disp_aal_notify_backlight_changed(0);
+#else
 			((cust_brightness_set) (g_leds_data[i]->cust.data)) (0,
 									     bl_div);
+#endif
 			break;
 		case MT65XX_LED_MODE_CUST_BLS_PWM:
 			LEDS_DRV_DEBUG("backlight control through BLS!!1\n");
+#ifdef CONFIG_MTK_AAL_SUPPORT
+			disp_aal_notify_backlight_changed(0);
+#else
 			((cust_set_brightness) (g_leds_data[i]->cust.data)) (0);
+#endif
 			break;
 		case MT65XX_LED_MODE_NONE:
 		default:
