--- drivers/misc/mediatek/include/mt-plat/mt_ccci_common.h
+++ drivers/misc/mediatek/include/mt-plat/mt_ccci_common.h
@@ -258,7 +258,7 @@ typedef enum {
 	MD_STATE_EXCEPTION = 3
 } MD_STATE_FOR_USER;
 
-enum {
+typedef enum {
 	ID_GET_MD_WAKEUP_SRC = 0,   /* for SPM */
 	ID_CCCI_DORMANCY = 1,	   /* abandoned */
 	ID_LOCK_MD_SLEEP = 2,	   /* abandoned */
@@ -281,10 +281,13 @@ enum {
 	ID_START_MD = 19,
 	ID_UPDATE_MD_BOOT_MODE = 20,
 	ID_MD_MPU_ASSERT = 21,
+	ID_ENTER_FLIGHT_MODE = 22,
+	ID_LEAVE_FLIGHT_MODE = 23,
+	ID_MD_RF_DESENSE = 24, /* Notify MD camera on/off will affect MD RF */
 
 	ID_UPDATE_TX_POWER = 100,   /* for SWTP */
 
-};
+} KERN_FUNC_ID;
 
 enum {
 	/*bit0-bit15: for modem capability related with ccci or ccci&ccmni driver*/
@@ -409,6 +412,8 @@ int ccci_sysfs_add_modem(int md_id, void *kobj, void *ktype,
 int get_modem_support_cap(int md_id); /* Export by ccci util */
 int set_modem_support_cap(int md_id, int new_val); /* Export by ccci util */
 char *ccci_get_md_info_str(int md_id); /* Export by ccci util */
+void get_md_postfix(int md_id, char k[], char buf[], char buf_ex[]); /* Export by ccci util */
+void update_ccci_port_ver(unsigned int new_ver); /* Export by ccci util */
 /* Export by ccci util */
 int ccci_load_firmware(int md_id, void *img_inf, char img_err_str[], char post_fix[], struct device *dev);
 int get_md_resv_mem_info(int md_id, phys_addr_t *r_rw_base, unsigned int *r_rw_size,
@@ -445,6 +450,7 @@ int get_md_type_from_lk(int md_id);
 int get_raw_check_hdr(int md_id, char buf[], int size);
 int ccci_get_md_check_hdr_inf(int md_id, void *img_inf, char post_fix[]);
 int get_md_img_raw_size(int md_id);
+void clear_meta_1st_boot_arg(int md_id);
 /* for kernel share memory user */
 void __iomem *get_smem_start_addr(int md_id, SMEM_USER_ID user_id, int *size_o);
 
@@ -481,4 +487,11 @@ typedef struct _mpu_cfg {
 } mpu_cfg_t;
 mpu_cfg_t *get_mpu_region_cfg_info(int region_id);
 int ccci_get_opt_val(char *opt_name);
+
+/* Rat configure relate */
+unsigned int get_wm_bitmap_for_ubin(void); /* Universal bin */
+void update_rat_bit_map_to_drv(int md_id, unsigned int val);
+int get_md_img_type(int md_id);
+int get_legacy_md_type(int md_id);
+
 #endif
