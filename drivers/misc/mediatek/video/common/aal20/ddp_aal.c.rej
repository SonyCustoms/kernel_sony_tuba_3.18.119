--- drivers/misc/mediatek/video/common/aal20/ddp_aal.c
+++ drivers/misc/mediatek/video/common/aal20/ddp_aal.c
@@ -70,13 +70,22 @@ int aal_dbg_en = 0;
 static int disp_aal_write_init_regs(void *cmdq);
 #endif
 static int disp_aal_write_param_to_reg(cmdqRecHandle cmdq, const DISP_AAL_PARAM *param);
+static void set_aal_need_lock(int aal_need_lock);
 
 
 static DECLARE_WAIT_QUEUE_HEAD(g_aal_hist_wq);
 static DEFINE_SPINLOCK(g_aal_hist_lock);
+static DEFINE_SPINLOCK(g_aal_irq_en_lock);
+
 static DISP_AAL_HIST g_aal_hist = {
 	.serviceFlags = 0,
-	.backlight = -1
+	.backlight = -1,
+#ifdef AAL_SUPPORT_KERNEL_API
+	.essStrengthIndex = ESS_LEVEL_BY_CUSTOM_LIB,
+	.ess_enable = ESS_EN_BY_CUSTOM_LIB,
+	.dre_enable = DRE_EN_BY_CUSTOM_LIB
+#endif
+
 };
 static DISP_AAL_HIST g_aal_hist_db;
 static ddp_module_notify g_ddp_notify;
@@ -142,24 +162,11 @@ static int disp_aal_exit_idle(const char *caller, int need_kick)
 	return 0;
 }
 
-static void backlight_brightness_set_with_lock(int bl_1024)
-{
-	_primary_path_switch_dst_lock();
-	primary_display_manual_lock();
-
-	backlight_brightness_set(bl_1024);
-
-	primary_display_manual_unlock();
-	_primary_path_switch_dst_unlock();
-}
-
 static int disp_aal_init(DISP_MODULE_ENUM module, int width, int height, void *cmdq)
 {
 #ifdef CONFIG_MTK_AAL_SUPPORT
 	/* Enable AAL histogram, engine */
 	DISP_REG_MASK(cmdq, DISP_AAL_CFG, 0x3 << 1, (0x3 << 1) | 0x1);
-
-	disp_aal_write_init_regs(cmdq);
 #endif
 #if defined(CONFIG_ARCH_MT6797) || defined(CONFIG_ARCH_MT6757) /* disable stall cg for avoid display path hang */
 	DISP_REG_MASK(cmdq, DISP_AAL_CFG, 0x1 << 4, 0x1 << 4);
@@ -409,30 +418,30 @@ void disp_aal_notify_backlight_changed(int bl_1024)
 	if (bl_1024 > max_backlight)
 		bl_1024 = max_backlight;
 
+	/* default set need not to lock display path */
+	set_aal_need_lock(0);
+
 	g_aal_backlight_notified = bl_1024;
 
 	service_flags = 0;
 	if (bl_1024 == 0) {
 		/* set backlight under LCM_CABC mode with cpu : need lock */
 		if (g_led_mode == MT65XX_LED_MODE_CUST_LCM)
-			backlight_brightness_set_with_lock(0);
-		else
-			backlight_brightness_set(0);
+			set_aal_need_lock(1);
 
+		backlight_brightness_set(0);
 		/* set backlight = 0 may be not from AAL, we have to let AALService
 		   can turn on backlight on phone resumption */
 		service_flags = AAL_SERVICE_FORCE_UPDATE;
-		/* using CPU to set backlight = 0,  */
-		/* we have to set backlight = 0 through CMDQ again to avoid timimg issue */
-		disp_pwm_set_force_update_flag();
 	} else if (!g_aal_is_init_regs_valid) {
-		/* AAL Service is not running */
+		/* set backlight under LCM_CABC mode with cpu : need lock */
 		if (g_led_mode == MT65XX_LED_MODE_CUST_LCM)
-			backlight_brightness_set_with_lock(bl_1024);
-		else
-			backlight_brightness_set(bl_1024);
+			set_aal_need_lock(1);
+
+		/* AAL Service is not running */
+		backlight_brightness_set(bl_1024);
 	}
-	AAL_NOTICE("led_mode=%d , aal_need_lock=%d", g_led_mode, g_aal_need_lock);
+	AAL_DBG("led_mode=%d , aal_need_lock=%d", g_led_mode, g_aal_need_lock);
 
 	spin_lock_irqsave(&g_aal_hist_lock, flags);
 	g_aal_hist.backlight = bl_1024;
@@ -584,10 +621,16 @@ int disp_aal_set_param(DISP_AAL_PARAM __user *param, void *cmdq)
 	if (ret == 0)
 		ret |= disp_pwm_set_backlight_cmdq(DISP_PWM0, backlight_value, cmdq);
 
-	AAL_DBG("disp_aal_set_param(CABC = %d, DRE[0,8] = %d,%d, latency=%d): ret = %d",
+	AAL_DBG("disp_aal_set_param(ESS = %d, DRE[0,8] = %d,%d, latency=%d): ret = %d",
 		g_aal_param.cabc_fltgain_force, g_aal_param.DREGainFltStatus[0],
 		g_aal_param.DREGainFltStatus[8], g_aal_param.refreshLatency, ret);
 
+	/*
+	set backlight from user cmd ioctl, no display path lock needed because
+	lock already applied
+	  */
+	set_aal_need_lock(0);
+
 	backlight_brightness_set(backlight_value);
 
 	disp_aal_trigger_refresh(g_aal_param.refreshLatency);
