--- drivers/misc/mediatek/video/mt6755/primary_display.c
+++ drivers/misc/mediatek/video/mt6755/primary_display.c
@@ -5390,9 +5386,8 @@ int _set_backlight_by_cmdq(unsigned int level)
 	if (primary_display_is_video_mode()) {
 		MMProfileLogEx(ddp_mmp_get_events()->primary_set_bl, MMProfileFlagPulse, 1, 2);
 		cmdqRecReset(cmdq_handle_backlight);
-		_cmdq_insert_wait_frame_done_token_mira(cmdq_handle_backlight);
 		disp_lcm_set_backlight(pgc->plcm, cmdq_handle_backlight, level);
-		_cmdq_flush_config_handle_mira(cmdq_handle_backlight, 0);
+		_cmdq_flush_config_handle_mira(cmdq_handle_backlight, 1);
 		DISPMSG("[BL]_set_backlight_by_cmdq ret=%d\n", ret);
 	} else {
 		MMProfileLogEx(ddp_mmp_get_events()->primary_set_bl, MMProfileFlagPulse, 1, 3);
@@ -5479,6 +5474,7 @@ int primary_display_setbacklight(unsigned int level)
 {
 	int ret = 0;
 	static unsigned int last_level;
+	int need_lock = 0;
 
 	if (disp_helper_get_stage() != DISP_HELPER_STAGE_NORMAL) {
 		DISPMSG("%s skip due to stage %s\n", __func__, disp_helper_stage_spy());
@@ -5491,10 +5487,21 @@ int primary_display_setbacklight(unsigned int level)
 	MMProfileLogEx(ddp_mmp_get_events()->primary_set_bl, MMProfileFlagStart, 0, 0);
 
 #ifndef CONFIG_MTK_AAL_SUPPORT
-	_primary_path_switch_dst_lock();
-
-	_primary_path_lock(__func__);
+	/* backlight setting from led driver : need lock */
+	need_lock = 1;
+#else
+	/* In AAL feature on case
+	     if backlight value not equal to zero, setting if from AAL : need not lock because
+	     already locked at user command function (primary_display_user_cmd)
+	     if backlight value equal to zero, setting if from led driver : need lock because
+	     not lock applied before
+	*/
+	need_lock = aal_is_need_lock();
 #endif
+	if (need_lock) {
+		_primary_path_switch_dst_lock();
+		_primary_path_lock(__func__);
+	}
 	if (pgc->state == DISP_SLEPT) {
 		DISPERR("Sleep State set backlight invald\n");
 	} else {
@@ -5503,7 +5510,7 @@ int primary_display_setbacklight(unsigned int level)
 			if (primary_display_is_video_mode()) {
 				MMProfileLogEx(ddp_mmp_get_events()->primary_set_bl,
 					       MMProfileFlagPulse, 0, 7);
-				_set_backlight_by_cmdq(level);
+				disp_lcm_set_backlight(pgc->plcm, NULL, level);
 			} else {
 				_set_backlight_by_cmdq(level);
 			}
@@ -5513,11 +5520,10 @@ int primary_display_setbacklight(unsigned int level)
 		}
 		last_level = level;
 	}
-#ifndef CONFIG_MTK_AAL_SUPPORT
-	_primary_path_unlock(__func__);
-
-	_primary_path_switch_dst_unlock();
-#endif
+	if (need_lock) {
+		_primary_path_unlock(__func__);
+		_primary_path_switch_dst_unlock();
+	}
 	MMProfileLogEx(ddp_mmp_get_events()->primary_set_bl, MMProfileFlagEnd, 0, 0);
 	return ret;
 }
@@ -6643,29 +6673,6 @@ void restart_smart_ovl_nolock(void)
 
 }
 
-/*Now the normal display vsync is DDP_IRQ_RDMA0_DONE in vdo mode, but when enter TUI,
- *we must protect the rdma0, then, should
- * switch it to the DDP_IRQ_DSI0_FRAME_DONE.
- */
-int display_vsync_switch_to_dsi(unsigned int flg)
-{
-	if (!primary_display_is_video_mode())
-		return 0;
-
-	if (!flg) {
-		dpmgr_map_event_to_irq(pgc->dpmgr_handle, DISP_PATH_EVENT_IF_VSYNC,
-								DDP_IRQ_RDMA0_DONE);
-		dsi_enable_irq(DISP_MODULE_DSI0, NULL, 0);
-
-	} else {
-		dpmgr_map_event_to_irq(pgc->dpmgr_handle, DISP_PATH_EVENT_IF_VSYNC,
-								DDP_IRQ_DSI0_FRAME_DONE);
-		dsi_enable_irq(DISP_MODULE_DSI0, NULL, 1);
-	}
-
-	return 0;
-}
-
 int display_enter_tui(void)
 {
 
@@ -6694,13 +6701,7 @@ int display_enter_tui(void)
 
 	session_mode_backup = pgc->session_mode;
 
-	if (session_mode_backup == DISP_SESSION_RDMA_MODE) {
-		do_primary_display_switch_mode(DISP_SESSION_DIRECT_LINK_MODE, pgc->session_id, 0, NULL, 0);
-		session_mode_backup = DISP_SESSION_DIRECT_LINK_MODE;
-	}
-
 	do_primary_display_switch_mode(DISP_SESSION_DECOUPLE_MODE, pgc->session_id, 0, NULL, 0);
-	display_vsync_switch_to_dsi(1);
 
 	MMProfileLogEx(ddp_mmp_get_events()->tui, MMProfileFlagPulse, 0, 1);
 
@@ -6733,7 +6734,6 @@ int display_exit_tui(void)
 	/*DISP_REG_SET(NULL, DISP_REG_RDMA_INT_ENABLE, 0xffffffff);*/
 
 	restart_smart_ovl_nolock();
-	display_vsync_switch_to_dsi(0);
 	_primary_path_unlock(__func__);
 
 	MMProfileLogEx(ddp_mmp_get_events()->tui, MMProfileFlagEnd, 0, 0);
