--- drivers/misc/mediatek/base/power/mt6755/mt_ptp.c
+++ drivers/misc/mediatek/base/power/mt6755/mt_ptp.c
@@ -1006,7 +1006,7 @@ static struct eem_det eem_detectors[NR_EEM_DET] = {
 		#if defined(CONFIG_MTK_PMIC_CHIP_MT6353)
 		.features	= 0,
 		#else
-		.features	= 0, /* FEA_INIT01 | FEA_INIT02 | FEA_MON, */
+		.features	= FEA_INIT01 | FEA_INIT02 | FEA_MON,
 		#endif
 		.max_freq_khz	= 728000,/* 728 MHz */
 		.VBOOT		= EEM_VOLT_TO_PMIC_VAL(100000), /* 1.0v: 0x30 */
@@ -1544,6 +1544,7 @@ static void restore_record(struct eem_det *det)
 static void mt_cpufreq_set_ptbl_funcEEM(enum mt_cpu_dvfs_id id, int restore)
 {
 	struct eem_det *det = id_to_eem_det((id == MT_CPU_DVFS_LITTLE) ? EEM_CTRL_LITTLE : EEM_CTRL_BIG);
+
 	if (restore)
 		restore_record(det);
 	else
@@ -1635,9 +1636,9 @@ static void restore_default_volt_cpu(struct eem_det *det)
 static void get_freq_table_cpu(struct eem_det *det)
 {
 	int i;
-	unsigned int binLevel, binLevel_eng;
+	unsigned int binLevel;
 	#if !defined(CONFIG_MTK_PMIC_CHIP_MT6353)
-	unsigned int freq_bound;
+	unsigned int freq_bound, binLevel_eng;
 	#endif
 	#ifndef EARLY_PORTING
 	enum mt_cpu_dvfs_id cpu;
@@ -1649,7 +1650,6 @@ static void get_freq_table_cpu(struct eem_det *det)
 
 	/* det->max_freq_khz = mt_cpufreq_get_freq_by_idx(cpu, 0); */
 	#ifdef __KERNEL__
-		binLevel_eng = GET_BITS_VAL(15:0, get_devinfo_with_index(19));
 		binLevel = GET_BITS_VAL(7:0, get_devinfo_with_index(21));
 		#if defined(CONFIG_MTK_PMIC_CHIP_MT6353)
 		if (eem_is_extbuck_valid) {
@@ -1660,8 +1660,8 @@ static void get_freq_table_cpu(struct eem_det *det)
 		} else
 			binLevel = 1;
 		cpuBinLevel = binLevel;
-		cpuBinLevel_eng = 0x20;
 		#else
+		binLevel_eng = GET_BITS_VAL(15:0, get_devinfo_with_index(19));
 		freq_bound = GET_BITS_VAL(25:23, get_devinfo_with_index(4));
 		#endif
 	#else
@@ -1720,11 +1720,12 @@ static void get_freq_table_cpu(struct eem_det *det)
 					PERCENT((det_to_id(det) == EEM_DET_LITTLE) ? littleFreq_SB[i] : bigFreq_SB[i],
 					det->max_freq_khz);
 				#ifdef CONFIG_ARCH_MT6755_TURBO
-				} else if (0x22 == binLevel) {
+				} else if (0x20 == (binLevel & 0xF0)) {
 					det->freq_tbl[i] =
 					PERCENT((det_to_id(det) == EEM_DET_LITTLE) ? littleFreq_P15[i] : bigFreq_P15[i],
 					det->max_freq_khz);
 				#endif
+				#if !defined(CONFIG_MTK_PMIC_CHIP_MT6353)
 				} else {
 					if ((2 == ((binLevel_eng >> 4) & 0x07)) ||
 					    (2 == ((binLevel_eng >> 10) & 0x07))) {
@@ -1732,11 +1733,7 @@ static void get_freq_table_cpu(struct eem_det *det)
 							PERCENT(
 							(det_to_id(det) == EEM_DET_LITTLE) ?
 								littleFreq_FY[i] :
-								#if defined(CONFIG_MTK_PMIC_CHIP_MT6353)
-								bigFreq_FY[i],
-								#else
 								((freq_bound == 5) ? bigFreq_FY_M[i] : bigFreq_FY[i]),
-								#endif
 							det->max_freq_khz);
 					} else {
 						det->freq_tbl[i] =
@@ -1747,6 +1744,9 @@ static void get_freq_table_cpu(struct eem_det *det)
 							det->max_freq_khz);
 					}
 				}
+				#else
+				}
+				#endif
 			}
 		#endif
 		if (0 == det->freq_tbl[i])
@@ -2064,6 +2064,9 @@ static int eem_volt_thread_handler(void *data)
 	struct eem_det *det = id_to_eem_det(ctrl->det_id);
 
 	FUNC_ENTER(FUNC_LV_HELP);
+	if (det == NULL)
+		return 0;
+
 #ifdef __KERNEL__
 
 	do {
@@ -2347,6 +2350,10 @@ static void eem_init_det(struct eem_det *det, struct eem_devinfo *devinfo)
 	FUNC_EXIT(FUNC_LV_HELP);
 }
 
+int __attribute__((weak)) tscpu_is_temp_valid(void)
+{
+	return 1;
+}
 
 static void eem_set_eem_volt(struct eem_det *det)
 {
@@ -2355,6 +2362,9 @@ static void eem_set_eem_volt(struct eem_det *det)
 	int cur_temp, low_temp_offset;
 	struct eem_ctrl *ctrl = id_to_eem_ctrl(det->ctrl_id);
 
+	if (ctrl == NULL)
+		return;
+
 	cur_temp = det->ops->get_temp(det);
 	/* eem_debug("eem_set_eem_volt cur_temp = %d, valid = %d\n", cur_temp, tscpu_is_temp_valid()); */
 	if ((cur_temp <= 33000) || !tscpu_is_temp_valid()) {
@@ -2432,6 +2442,9 @@ static void eem_restore_eem_volt(struct eem_det *det)
 #if SET_PMIC_VOLT
 	struct eem_ctrl *ctrl = id_to_eem_ctrl(det->ctrl_id);
 
+	if (ctrl == NULL)
+		return;
+
 	ctrl->volt_update |= EEM_VOLT_RESTORE;
 #ifdef __KERNEL__
 	wake_up_interruptible(&ctrl->wq);
@@ -2499,6 +2512,7 @@ static inline void handle_init01_isr(struct eem_det *det)
 #if DUMP_DATA_TO_DE
 	{
 		unsigned int i;
+
 		for (i = 0; i < ARRAY_SIZE(reg_dump_addr_off); i++) {
 			det->reg_dump_data[i][EEM_PHASE_INIT01] = eem_read(EEM_BASEADDR + reg_dump_addr_off[i]);
 			#ifdef __KERNEL__
@@ -3390,17 +3404,17 @@ void get_devinfo(struct eem_devinfo *p)
 #endif
 
 	#if defined(CONFIG_MTK_PMIC_CHIP_MT6353)
-	if ((p->CPU0_BDES != 0) && (p->CPU1_BDES != 0))
+	if ((p->CPU0_MDES != 0) && (p->CPU1_MDES != 0)) {
 			val[7] = 0x01;
-
-	if ((p->CPU0_MTDES != 0) && (p->CPU1_MTDES != 0))
 			val[7] = val[7] | (0x01<<8);
+	}
 
 	#else
-	if ((p->CPU0_BDES != 0) && (p->CPU1_BDES != 0) && (p->GPU_BDES != 0))
+	if ((p->CPU0_MDES != 0) && (p->CPU1_MDES != 0) && (p->GPU_MDES != 0)) {
 		val[7] = 0x01;
-	if ((p->CPU0_MTDES != 0) && (p->CPU1_MTDES != 0) && (p->GPU_MTDES != 0))
 		val[7] = val[7] | (0x01<<8);
+	}
+
 	#endif
 
 	eem_debug("M_HW_RES0 = 0x%X\n", val[0]);
@@ -3547,7 +3561,7 @@ static int eem_probe(struct platform_device *pdev)
 		}
 	#else
 		/* for Jade/Everest/Olympus(MT6351) */
-		pmic_config_interface(0x44E, 0x1, 0x1, 1); /* set PWM mode for MT6351 */
+		pmic_force_vcore_pwm(true); /* set PWM mode for MT6351 */
 		mt6311_config_interface(0x7C, 0x1, 0x1, 6); /* set PWM mode for MT6311 */
 	#endif
 
@@ -3583,7 +3597,7 @@ static int eem_probe(struct platform_device *pdev)
 	#else
 		/* for Jade/Everest/Olympus(MT6351) */
 		mt6311_config_interface(0x7C, 0x0, 0x1, 6); /* set non-PWM mode for MT6311 */
-		pmic_config_interface(0x44E, 0x0, 0x1, 1); /* set non-PWM mode for MT6351 */
+		pmic_force_vcore_pwm(false); /* set non-PWM mode for MT6351 */
 	#endif
 
 	#ifdef __KERNEL__
@@ -3742,6 +3756,10 @@ int mt_eem_opp_num(enum eem_det_id id)
 	struct eem_det *det = id_to_eem_det(id);
 
 	FUNC_ENTER(FUNC_LV_API);
+
+	if (det == NULL)
+		return 0;
+
 	FUNC_EXIT(FUNC_LV_API);
 
 	return det->num_freq_tbl;
@@ -3755,6 +3773,9 @@ void mt_eem_opp_freq(enum eem_det_id id, unsigned int *freq)
 
 	FUNC_ENTER(FUNC_LV_API);
 
+	if (det == NULL)
+		return;
+
 	for (i = 0; i < det->num_freq_tbl; i++)
 		freq[i] = det->freq_tbl[i];
 
@@ -3769,6 +3790,9 @@ void mt_eem_opp_status(enum eem_det_id id, unsigned int *temp, unsigned int *vol
 
 	FUNC_ENTER(FUNC_LV_API);
 
+	if (det == NULL)
+		return;
+
 #if defined(__KERNEL__) && defined(CONFIG_THERMAL) && !defined(EARLY_PORTING)
 	*temp = tscpu_get_temp_by_bank(
 		(id == EEM_DET_LITTLE) ? THERMAL_BANK0 :
@@ -4632,6 +4656,9 @@ void eem_set_pi_offset(enum eem_ctrl_id id, int step)
 {
 	struct eem_det *det = id_to_eem_det(id);
 
+	if (det == NULL)
+		return;
+
 	det->pi_offset = step;
 
 #ifdef CONFIG_EEM_AEE_RR_REC
@@ -4675,9 +4702,9 @@ static int __init vcore_ptp_init(void)
 static int __init eem_conf(void)
 {
 	int i;
-	unsigned int binLevel, binLevel_eng;
+	unsigned int binLevel;
 	#if !defined(CONFIG_MTK_PMIC_CHIP_MT6353)
-	unsigned int freq_bound;
+	unsigned int freq_bound, binLevel_eng;
 	#endif
 	struct device_node *cpuSpeedNode = NULL;
 
@@ -4699,7 +4726,6 @@ static int __init eem_conf(void)
 	eem_error("0--->The cpu_speed = %d\n", cpu_speed);
 
 	/* read E-fuse for segment selection */
-	binLevel_eng = GET_BITS_VAL(15:0, get_devinfo_with_index(19));
 	binLevel = GET_BITS_VAL(7:0, get_devinfo_with_index(21));
 	#if defined(CONFIG_MTK_PMIC_CHIP_MT6353)
 	if (cpu_eem_is_extbuck_valid()) {
@@ -4711,6 +4737,7 @@ static int __init eem_conf(void)
 		binLevel = 1;
 	if (0) {
 	#else
+	binLevel_eng = GET_BITS_VAL(15:0, get_devinfo_with_index(19));
 	freq_bound = GET_BITS_VAL(25:23, get_devinfo_with_index(4));
 	if (1001 == cpu_speed) {
 	#endif
@@ -4750,13 +4777,13 @@ static int __init eem_conf(void)
 			recordTbl = &sbTbl[0][0];
 			eem_error("@The table ----->(sbTbl)\n");
 		#ifdef CONFIG_ARCH_MT6755_TURBO
-		} else if (0x22 == binLevel) {
+		} else if (0x20 == (binLevel & 0xF0)) {
 			recordTbl = &p15Tbl[0][0];
 			eem_error("@The table ----->(p15Tbl)\n");
 		#endif
+		#if !defined(CONFIG_MTK_PMIC_CHIP_MT6353)
 		} else {
 			if ((2 == ((binLevel_eng >> 4) & 0x07)) || (2 == ((binLevel_eng >> 10) & 0x07))) {
-				#if !defined(CONFIG_MTK_PMIC_CHIP_MT6353)
 				if (freq_bound == 5) {
 					recordTbl = &fyTbl_M[0][0];
 					eem_error("@The table ----->(ENG fyTbl_M)\n");
@@ -4764,14 +4791,14 @@ static int __init eem_conf(void)
 					recordTbl = &fyTbl[0][0];
 					eem_error("@The table ----->(ENG fyTbl)\n");
 				}
-				#else
-				recordTbl = &fyTbl[0][0];
-				#endif
 			} else {
 				recordTbl = &sbTbl[0][0];
 				eem_error("@The table ----->(ENG sbTbl)\n");
 			}
 		}
+		#else
+		}
+		#endif
 	}
 
 	/* [13:7] = Vsram pmic value, [6:0] = Vproc pmic value */
