--- drivers/misc/mediatek/uart/uart.c
+++ drivers/misc/mediatek/uart/uart.c
@@ -2445,7 +2446,6 @@ static int mtk_uart_syscore_suspend(void)
 		/* tx pin:  idle->high   power down->low */
 		mtk_uart_switch_tx_to_gpio(uart);
 		spin_unlock_irqrestore(&mtk_uart_bt_lock, flags);
-		pr_debug("[UART%d] Suspend(%d)!\n", uart->nport, ret);
 	}
 	return ret;
 }
@@ -2464,7 +2464,6 @@ static void mtk_uart_syscore_resume(void)
 		ret = uart_resume_port(&mtk_uart_drv, &uart->port);
 		spin_unlock_irqrestore(&mtk_uart_bt_lock, flags);
 		disable_irq(uart->port.irq);
-		pr_debug("[UART%d] Resume(%d)!\n", uart->nport, ret);
 	}
 }
 
@@ -2474,12 +2473,13 @@ static int mtk_uart_suspend(struct platform_device *pdev, pm_message_t state)
 	int ret = 0;
 	struct mtk_uart *uart = platform_get_drvdata(pdev);
 
+	if (!uart)
+		return -1;
+
 	/* For console_suspend_enabled=0 */
-	if (console_suspend_enabled == 0 && uart == console_port && uart->poweron_count > 0)
-		mtk_uart_save(uart);
+	mtk_uart_save(uart);
 	if (uart && (uart->nport < UART_NR) && (uart != bt_port)) {
 		ret = uart_suspend_port(&mtk_uart_drv, &uart->port);
-		pr_debug("[UART%d] Suspend(%d)!\n", uart->nport, ret);
 		mtk_uart_switch_rx_to_gpio(uart);
 	}
 	return ret;
@@ -2494,7 +2494,6 @@ static int mtk_uart_resume(struct platform_device *pdev)
 	if (uart && (uart->nport < UART_NR) && (uart != bt_port)) {
 		mtk_uart_switch_to_rx(uart);
 		ret = uart_resume_port(&mtk_uart_drv, &uart->port);
-		pr_debug("[UART%d] Resume(%d)!\n", uart->nport, ret);
 	}
 	return ret;
 }
