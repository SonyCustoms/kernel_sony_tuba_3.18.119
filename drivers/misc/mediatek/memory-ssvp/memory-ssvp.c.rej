--- drivers/misc/mediatek/memory-ssvp/memory-ssvp.c
+++ drivers/misc/mediatek/memory-ssvp/memory-ssvp.c
@@ -19,57 +18,44 @@
 #include <linux/printk.h>
 #include <linux/cma.h>
 #include <linux/debugfs.h>
-#include <linux/stat.h>
 #include <linux/seq_file.h>
-#include <linux/uaccess.h>
-#include <linux/init.h>
 #include <linux/mutex.h>
+#include <linux/highmem.h>
 #include <asm/page.h>
 #include <asm-generic/memory_model.h>
 
 #include <linux/kthread.h>
 #include <linux/delay.h>
-#include <linux/module.h>
 #include <linux/device.h>
-#include <linux/fs.h>
 #include <linux/proc_fs.h>
-#include <linux/miscdevice.h>
-#include <linux/dma-mapping.h>
-#include <asm/uaccess.h>
+#include <linux/uaccess.h>
 #include <linux/memblock.h>
 #include <asm/tlbflush.h>
 #include "sh_svp.h"
 
+const int is_pre_reserve_memory;
+
 #define _SSVP_MBSIZE_ (CONFIG_MTK_SVP_RAM_SIZE + CONFIG_MTK_TUI_RAM_SIZE)
-#define _SVP_MBSIZE CONFIG_MTK_SVP_RAM_SIZE
-#define _TUI_MBSIZE CONFIG_MTK_TUI_RAM_SIZE
+#define SVP_MBSIZE CONFIG_MTK_SVP_RAM_SIZE
+#define TUI_MBSIZE CONFIG_MTK_TUI_RAM_SIZE
 
-#define COUNT_DOWN_MS 4000
-#define	COUNT_DOWN_INTERVAL 200
+#define COUNT_DOWN_MS 10000
+#define	COUNT_DOWN_INTERVAL 500
+#define	COUNT_DOWN_LIMIT (COUNT_DOWN_MS / COUNT_DOWN_INTERVAL)
+static atomic_t svp_online_count_down;
 
+/* 64 MB alignment */
 #define SSVP_CMA_ALIGN_PAGE_ORDER 14
 #define SSVP_ALIGN_SHIFT (SSVP_CMA_ALIGN_PAGE_ORDER + PAGE_SHIFT)
 #define SSVP_ALIGN (1 << SSVP_ALIGN_SHIFT)
 
+static u64 ssvp_upper_limit = UPPER_LIMIT64;
+
 #include <mt-plat/aee.h>
 #include "mt-plat/mtk_meminfo.h"
 
-/* no_release_memory:
- *
- * do not release memory back to buddy system,
- * for dubugging or pmd mapping error.
- */
-#ifdef CONFIG_MTK_MEMORY_SSVP_WRAP
-static bool no_release_memory __read_mostly = true;
-#else
-static bool no_release_memory __read_mostly;
-#endif
-
 static unsigned long svp_usage_count;
-static int ref_count;
-
-static struct page *wrap_svp_pages;
-static struct page *wrap_tui_pages;
+static atomic_t svp_ref_count;
 
 enum ssvp_subtype {
 	SSVP_SVP,
